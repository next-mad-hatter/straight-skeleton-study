plugins {
    id 'java'
    id 'application'
    id 'net.ltgt.apt' version '0.10'
    // id "org.jetbrains.kotlin.jvm" version "1.2.21"
}

repositories {
    jcenter()
    mavenCentral()
    flatDir
    {
      dirs 'lib'
    }
}

dependencies {
    compile fileTree(dir: 'lib', include: '*.jar')
    compile group: 'com.codepoetics', name: 'protonpack', version: '1.+'
    // compile group: 'org.jooq', name: 'jool', version: '0.9.+'
    // compile group: 'io.github.amaembo', name: 'streamex', version: '0.0.7'
    // compile group: 'io.vavr', name: 'vavr', version: '0.9.0'
    // compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.+'
    compileOnly 'org.projectlombok:lombok:1.+'
    apt "org.projectlombok:lombok:1.+"
    compile group: 'org.tukaani', name: 'xz', version: '1.+'
    compile group: 'me.tongfei', name: 'progressbar', version: '0.4.+'
    compile group: 'org.tallison', name: 'jmatio', version: '1.2'
    compile group: 'org.jfree', name: 'jfreesvg', version: '3.2'
    //compile group: 'org.jgrapht', name: 'jgrapht', version: '1.1.0', ext: 'pom'
    compile group: 'org.jgrapht', name: 'jgrapht-core', version: '1.1.+'
    testCompile 'junit:junit:4.+'
    // compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

/*
sourceSets {
    main.java.srcDirs += 'src/main/java'
    main.kotlin.srcDirs += 'src/main/kotlin'
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
*/

compileJava {
  options.compilerArgs << "-Xlint" // << "-Werror" // "-Xlint:unchecked" << "-Xlint:deprecation"
}

task(runDebug, dependsOn: 'classes', type: JavaExec) {
    main = 'at.tugraz.igi.main.Main'
    classpath = sourceSets.main.runtimeClasspath
    jvmArgs = ["-Xdebug", "-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005"]
}

// Append app args like this: gradle run -PappArgs="['in.txt', 'out.txt', 'out.png']"
// (for SingleRun to be usable via gradle)
run {
    if (project.hasProperty("appArgs")) {
        args Eval.me(appArgs)
    }
}

jar {
  manifest {
    if (!configurations.compile.isEmpty()) {
      attributes(
          'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
          'Main-Class': 'at.tugraz.igi.main.Main'
          )
    }
  }
  // This creates a fat/uber-jar:
  from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }

  /*
  from('lib') { include '*.jar' }
  jar {
    into('lib') {
      from 'lib'
    }
  }
  */
}

mainClassName = 'at.tugraz.igi.main.Main'
// mainClassName = 'at.tugraz.igi.main.SingleRun'
// mainClassName = 'at.tugraz.igi.main.BatchRun'

