plugins {
    id 'application'
    id "org.jetbrains.kotlin.jvm" version "1.2.21"
    /*
    id 'java'
    */
}

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

sourceSets {
    main.kotlin.srcDirs += 'src/main/kotlin'
    main.java.srcDirs += 'src/main/java'
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

/*
compileJava {
  options.compilerArgs << "-Xlint" << "-Werror" // "-Xlint:unchecked" << "-Xlint:deprecation"
}

task(runDebug, dependsOn: 'classes', type: JavaExec) {
    main = 'my.kotlin.MainKt'
    classpath = sourceSets.main.runtimeClasspath
    jvmArgs = ["-Xdebug", "-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005"]
}
*/

// To 'gradle run' with arguments, append app args like this:
// gradle run -PappArgs="['in.txt', 'out.txt', 'out.png']"
run {
    if (project.hasProperty("appArgs")) {
        args Eval.me(appArgs)
    }
}

jar {
  manifest {
    if (!configurations.compile.isEmpty()) {
      attributes(
          'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
          'Main-Class': 'madhat.kotton.MainKt'
          )
    }
  }
  // This creates a fat/uber-jar:
  from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }

}

// what class will get executed by 'gradle run'
mainClassName = 'madhat.kotton.MainKt'
